def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)


def check_winner(board):
    # Проверка строк и столбцов
    for i in range(3):
        if board[i][0] == board[i][1] == board[i][2] != " ":
            return board[i][0]
        if board[0][i] == board[1][i] == board[2][i] != " ":
            return board[0][i]
    # Проверка диагоналей
    if board[0][0] == board[1][1] == board[2][2] != " ":
        return board[0][0]
    if board[0][2] == board[1][1] == board[2][0] != " ":
        return board[0][2]
    return None


def is_board_full(board):
    return all(cell != " " for row in board for cell in row)


def main():
    board = [[" " for _ in range(3)] for _ in range(3)]
    current_player = "X"

    print("Игра в Крестики-Нолики")
    print("Введите координаты для выбора ячейки (строка и столбец от 1 до 3):")

    while True:
        print_board(board)
        try:
            row = int(input(f"Игрок {current_player}, введите номер строки (1-3): ")) - 1
            col = int(input(f"Игрок {current_player}, введите номер столбца (1-3): ")) - 1

            if 0 <= row < 3 and 0 <= col < 3 and board[row][col] == " ":
                board[row][col] = current_player
                winner = check_winner(board)
                if winner:
                    print_board(board)
                    print(f"Игрок {winner} выиграл!")
                    break
                if is_board_full(board):
                    print_board(board)
                    print("Игра завершилась ничьей!")
                    break
                current_player = "O" if current_player == "X" else "X"
            else:
                print("Неверный ввод или ячейка занята. Попробуйте снова.")
        except ValueError:
            print("Пожалуйста, вводите только числа.")


if __name__ == "__main__":
    main()
